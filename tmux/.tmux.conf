# QiangZiBro的tmux配置
#	Github:https://github.com/QiangZiBro
#	安装插件方法：
#		- bash ~/.Qdotfiles/tmux/install.sh 
#		- <prefix> + I （I是大写）

#--------------------------------------------------------------------------------
# 基本配置
#	refer: https://github.com/tmux-plugins/tmux-sensible
#		   https://github.com/samoshkin/tmux-config
#			
#--------------------------------------------------------------------------------


#-------------------------------------------------
# 选项(Options)
#-------------------------------------------------

# 设置本地<prefix>为 Ctrl+S 组合键
unbind C-b
set -g prefix C-s
# 设置远程<prefix>为 Ctrl+B 组合键，在嵌套tmux有用
bind-key -n C-b send-prefix

# 允许使用鼠标上下滑动，改变窗格大小，选择窗口
# refer: https://davidverhasselt.com/enable-mouse-support-in-tmux-on-os-x/
set -g mouse on
## TODO
#if-shell -b 'test "$(uname)" = "Darwin"' "\
#	set -g mouse-resize-pane on;\
#	set -g mouse-select-pane on;\
#	set -g mouse-select-window on;\
#"

# tmux中翻页复制时，用vim的快捷键
setw -g mode-keys vi

# 增加历史容量
set -g history-limit 50000

# TODO
set -g default-terminal "screen-256color"
#-------------------------------------------------
# 快捷键(Key bindings)
#-------------------------------------------------
# 在当前目录下打开新的终端
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# 允许块状复制，这是个很有用的功能，比如，我们希望复制tmux里的vim文字到系统粘贴板上
# 使用方法：
# 1. <prefix>+[进入选择模式
# 2. Ctrl-v 进入块状选择
# 接下来即可像vim一样进行块状选择，按Enter键确认拷贝
bind-key -Tcopy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'C-q' send -X begin-selection \; send -X rectangle-toggle

# 使用vim键选窗格（pane）
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 使用<prefix>+ Ctrl+P或Ctrl+N进入上一个和下一个窗口
# 【提示】：按住ctrl，按s，按p就可以进入上一窗口
bind C-p previous-window
bind C-n next-window

#--------------------------------------------------------------------------------
# Github插件
#--------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# 支持正则搜索，prefix + /，更多参考https://github.com/tmux-plugins/tmux-copycat
set -g @plugin 'tmux-plugins/tmux-copycat'

#set -g @plugin 'odedlaz/tmux-onedark-theme'

#-------------------------------------------------
# 状态栏(Status Bar)
#-------------------------------------------------
# 显示prefix键有没有被按下
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# 显示当前目录文件树 <prefix> + Tab 
set -g @plugin 'tmux-plugins/tmux-sidebar'

# 显示当前主机是否联网（以连通百度为标准）
set -g @plugin 'QiangZiBro/tmux-online-status-cn'
# 如果图标不显示则用下面两个代替
#set -g @online_icon "ok"
#set -g @offline_icon "offline!"

# 显示cpu信息 https://github.com/tmux-plugins/tmux-cpu
set -g @plugin 'QiangZiBro/tmux-cpu'
# 对tmux cpu写了一个配置，觉得没有必要那么花哨，就省去了
#set -g @cpu_low_icon "😄" # icon when cpu is low
#set -g @cpu_medium_icon "😎" # icon when cpu is medium
#set -g @cpu_high_icon "🥵" # icon when cpu is high
#set -g @cpu_low_fg_color "" # foreground color when cpu is low
#set -g @cpu_medium_fg_color "" # foreground color when cpu is medium
#set -g @cpu_high_fg_color "" # foreground color when cpu is high
#set -g @cpu_low_bg_color "#[bg=green]" # background color when cpu is low
#set -g @cpu_medium_bg_color "#[bg=yellow]" # background color when cpu is medium
#set -g @cpu_high_bg_color "#[bg=red]" # background color when cpu is high
#set -g @cpu_percentage_format "%3.1f%%" # printf format to use to display percentage
#set -g @cpu_medium_thresh "35" # medium percentage threshold
#set -g @cpu_high_thresh "80" # high percentage threshold
set-option -g status-right-length 90

# 获取各种系统信息的插件【CPU和MEM有BUG】
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
# tmux-plugin-sysstat例子
#set -g status-right "#{sysstat_cpu} | #{sysstat_mem} | #{sysstat_swap} | #{sysstat_loadavg} | #[fg=cyan]#(echo $USER)#[default]@#H"
#set -g status-right "CPU:#{cpu_percentage} | #{sysstat_mem} | #{sysstat_swap} | #{sysstat_loadavg} | #[fg=cyan]#(echo $USER)#[default]@#H"

set -g status-bg green
set -g status-fg white


# 找到主机名(hostname)
set -g @tpm_plugins "                 \
  tmux-plugins/tpm                    \
  soyuka/tmux-current-pane-hostname     \
"
# '#[fg=cyan,bold] #U@#H #[default]#[fg=blue]#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g") #[fg=red]%H:%M %d-%b-%y#[default]'


# 状态栏设定
# 混合tmux-cpu和tmux-plugin-sysstat
set -g status-right "#{prefix_highlight}#{online_status}|\
CPU:#{cpu_percentage}|GPU:#{gpu_percentage}|\
#{sysstat_loadavg}|\
%H:%M #H"

#-------------------------------------------------
# 断 电 克 星
#-------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# 1. [默认]每隔15分钟自动保存，当然你可以连按两次<prefix>键手动保存
# 2. [需要设置]通电后自动打开tmux
# 3. 开启tmux后自动恢复上一个保存的环境
set -g @continuum-restore 'on'
# 4.保存终端里的内容
set -g @resurrect-capture-pane-contents 'on'
# 5.for vim
set -g @resurrect-strategy-vim 'session'
# 6.for neovim
set -g @resurrect-strategy-nvim 'session'
set -sg escape-time 10 # vim back from insert too slow

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# EOF
